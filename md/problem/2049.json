{"title":"「HNOI2016」网络","time_limit":5000,"memory_limit":512,"tags":["2016","HNOI","CDQ 分治","树链剖分","线段树分治","数据结构"],"operation":{"submit":"https://loj.ac/problem/2049#submit_code","submissions":"https://loj.ac/submissions?problem_id=2049","statistics":"https://loj.ac/problem/2049/statistics/fastest","testdata":"https://loj.ac/problem/2049/testdata","discussion":"https://loj.ac/discussion/problem/2049"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"一个简单的网络系统可以被描述成一棵无根树。每个节点为一个服务器。连接服务器与服务器的数据线则看做一条树边。两个服务器进行数据的交互时，数据会经过连接这两个服务器的路径上的所有服务器（包括这两个服务器自身）。由于这条路径是唯一的，当路径上的某个服务器出现故障，无法正常运行时，数据便无法交互。此外，每个数据交互请求都有一个重要度，越重要的请求显然需要得到越高的优先处理权。\r\n\r\n现在，你作为一个网络系统的管理员，要监控整个系统的运行状态。系统的运行也是很简单的，在每一个时刻，只有可能出现下列三种事件中的一种：\r\n\r\n1. 在某两个服务器之间出现一条新的数据交互请求；\r\n2. 某个数据交互结束请求；\r\n3. 某个服务器出现故障。\r\n\r\n系统会在任何故障发生后立即修复。也就是在出现故障的时刻之后，这个服务器依然是正常的。但在服务器产生故障时依然会对需要经过该服务器的数据交互请求造成影响。\r\n\r\n你的任务是在每次出现故障时，维护未被影响的请求中重要度的最大值。\r\n\r\n**注意**：如果一个数据交互请求已经结束，则不将其纳入未被影响的请求范围。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个正整数 $ n, m $，分别描述服务器和事件个数。服务器编号是从 $ 1 $ 开始的，因此 $n$ 个服务器的编号依次是 $ 1, 2, 3, \\cdots ,n $。  \r\n接下来 $ n-1 $ 行，每行两个正整数 $ u, v $，描述一条树边。$ u $ 和 $ v $ 是服务器的编号。  \r\n接下来 $ m $ 行，按发生时刻依次描述每一个事件；即第 $ i $ 行（$ i = 1, 2, 3, \\cdots , m $）描述时刻 $ i $ 发生的事件。每行的第一个数 $ \\text{type} $ 描述事件类型，共三种类型：  \r\n1. 若 $ \\text{type} = 0 $，之后有三个正整数 $ a, b, v $，表示服务器 $ a, b $ 之间出现一条重要度为 $ v $ 的数据交互请求；\r\n2. 若 $ \\text{type} = 1 $，之后有一个正整数 $ t $，表示时刻 $ t $ （也就是第 $ t $ 个发生的事件）出现的数据交互请求结束；\r\n3. 若 $ \\text{type} = 2 $，之后有一个正整数 $ x $，表示服务器 $ x $ 在这一时刻出现了故障。对于每个 $ \\text{type} $ 为 $ 2 $ 的事件，就是一次询问，即询问「当服务器 $ x $ 发生故障时，未被影响的请求中重要度的最大值是多少？」  \r\n\r\n**注意**：可能有某个服务器自身与自身进行数据交互的情况。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"对于每个 $ \\text{type} = 2 $ 的事件，即服务器出现故障的事件，输出一行一个整数，描述未被影响的请求中重要度的最大值。\r\n\r\n如果此时没有任何请求，或者所有请求均被影响，则输出 $ -1 $。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n13 23 \r\n1 2 \r\n1 3 \r\n2 4 \r\n2 5 \r\n3 6 \r\n3 7 \r\n4 8 \r\n4 9 \r\n6 10 \r\n6 11 \r\n7 12 \r\n7 13 \r\n2 1 \r\n0 8 13 3 \r\n0 9 12 5 \r\n2 9 \r\n2 8 \r\n2 2 \r\n0 10 12 1 \r\n2 2 \r\n1 3 \r\n2 7 \r\n2 1 \r\n0 9 5 6 \r\n2 4 \r\n2 5 \r\n1 7 \r\n0 9 12 4 \r\n0 10 5 7 \r\n2 1 \r\n2 4 \r\n2 12 \r\n1 2 \r\n2 5 \r\n2 3\r\n```\r\n\r\n#### 样例输出\r\n```plain\r\n-1 \r\n3 \r\n5 \r\n-1 \r\n1 \r\n-1 \r\n1 \r\n1 \r\n3 \r\n6 \r\n7 \r\n7 \r\n4 \r\n6\r\n```\r\n\r\n#### 样例解释\r\n样例给出的树如下所示：\r\n\r\n![C5noxf.png](https://s1.ax1x.com/2018/05/29/C5noxf.png)\r\n\r\n解释其中的部分询问；下面的解释中用 $ (a, b ; t, v) $ 表示在 $ t $ 时刻出现的服务器 $ a $ 和 $ b $ 之间的重要度为 $ v $ 的请求：  \r\n对于第一个询问（在时刻 $ 1 $），此时没有任何请求，输出 $ -1 $。  \r\n对于第四个询问（在时刻 $ 6 $），此时有两条交互 $ (8, 13 ; 2, 3), (9, 12 ; 3, 5)$，所有询问均经过 $ 2 $ 号服务器，输出 $ -1 $。  \r\n对于第五个询问（在时刻 $ 8 $），此时有三条交互 $ (8, 13 ; 2, 3),(9, 12 ; 3, 5), (10, 12 ; 7, 1) $，只有交互 $ (10, 12 ; 7, 1) $ 没有经过 $ 2 $ 号服务器，因此输出其重要度 $ 1 $。  \r\n对于最后一个询问（在时刻 $ 23 $），此时有三条交互 $ (9, 5 ; 12, 6), (9, 12 ; 16, 4), (10, 5 ; 17, 7) $。当$ 3 $号服务器出现故障时，只有交互 $ (9, 5 ; 12, 6) $ 没有经过 $ 3 $ 号服务器，因此输出 $ 6 $。"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"$ 2 \\leq n \\leq 10^5 , 1 \\leq m \\leq 2 \\times 10^5 $，其他的所有输入值不超过 $10^9$ 。"}]}