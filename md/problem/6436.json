{"title":"「PKUSC2018」神仙的游戏","time_limit":1000,"memory_limit":512,"tags":[],"operation":{"submit":"https://loj.ac/problem/6436#submit_code","submissions":"https://loj.ac/submissions?problem_id=6436","statistics":"https://loj.ac/problem/6436/statistics/fastest","testdata":"https://loj.ac/problem/6436/testdata","discussion":"https://loj.ac/discussion/problem/6436"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"小 D 和小 H 是两位神仙。他们经常在一起玩神仙才会玩的一些游戏，比如「口算一个 $4$ 位数是不是完全平方数」。\r\n\r\n今天他们发现了一种新的游戏：首先称 $s$ 长度为 $\\rm len$ 的前缀成为 border 当且仅当 $s[1\\dots \\text {len} ] = s[|s|-\\text {len} + 1\\dots |s|]$ 。给出一个由 01? 组成的字符串 $s$, 将 $s$ 中的问号用变成 01 替换，对每个 $\\rm len$ 口算是否存在替换问号的方案使得 $s$ 长度为 $\\rm len$ 的前缀成为 border，把这个结果记做 $f(\\text{len})\\in \\{0,1\\}$。$f(\\text{len}) = 1$ 如果 $s$ 长度为 $\\rm len$ 的前缀能够成为 border，否则 $f(\\text{len}) = 0$。\r\n\r\n由于小 D 和小 H 是神仙，所以他们计算的 $s$ 的长度很长，因此把计算的结果一一比对会花费很长的时间。为了方便比对，他们规定了一个校验值：$(f(1)\\times 1^2)~\\text{xor}~(f(2)\\times 2^2)~\\text{xor}~(f(3)\\times 3^2)~\\text{xor}~\\dots~\\text{xor}~(f(n)\\times n^2)$ 来校验他们的答案是否相同。xor 表示按位异或。但是不巧，在某一次游戏中，他们口算出的校验值并不一样，他们希望你帮助他们来计算一个正确的校验值。当然，他们不强迫你口算，可以编程解决。\r\n"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"一个串 $s$, 保证每个字符都是 0，1，或者?."},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出字符串的校验值， 即 $(f(1)\\times 1^2)~\\text{xor}~(f(2)\\times 2^2)~\\text{xor}~(f(3)\\times 3^2)~\\text{xor}~\\dots~\\text{xor}~(f(n)\\times n^2)$。\r\n"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n1?0?\r\n```\r\n\r\n#### 样例输出\r\n```plain\r\n17\r\n```\r\n#### 样例解释\r\n\r\n将问号填充为 1001，则这个串有长度为 $1$ 的 border, 故 $f(1) = 1$。\r\n\r\n将问号填充为 1101，则这个串有长度为 $4$ 的 border, 故 $f(4) = 1$。\r\n\r\n对于 $f(2)$ 和 $f(3)$，可以枚举填充的字符是什么来证明他们的值是 0。\r\n\r\n故答案是$1^2~\\text{xor}~4^2=17$"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"本题采用捆绑测试，我们将测试点分成若干个 subtask，对于一个 subtask，**只有通过这个 subtask 的所有测试点才能拿到这个 subtask 的分数**。每个 subtask 的限制如下：\r\n\r\n| 子任务编号 |        $\\lvert s \\rvert$         |         附加说明         | 分数 |\r\n| :--------: | :------------------: | :----------------------: | :--: |\r\n|     1      |     $\\leq 1000$      |            无            |  8   |\r\n|     2      | $\\leq 5 \\times 10^5$ |     输入的串没有问号     |  10  |\r\n|     3      | $\\leq 5\\times 10^5$  |         数据随机         |  22  |\r\n|     4      | $\\leq 5\\times 10^5$  | 问号个数至少是$\\lvert s \\rvert -5000$ |  27  |\r\n|     5      | $\\leq 5\\times 10^5$  |            无            |  33  |"}]}