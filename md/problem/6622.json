{"title":"「THUPC 2019」找树 / findtree","time_limit":4000,"memory_limit":512,"tags":["THUPC","2019","最小生成树","FWT","图论"],"operation":{"submit":"https://loj.ac/problem/6622#submit_code","submissions":"https://loj.ac/submissions?problem_id=6622","statistics":"https://loj.ac/problem/6622/statistics/fastest","testdata":"https://loj.ac/problem/6622/testdata","discussion":"https://loj.ac/discussion/problem/6622"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"定义 $\\otimes_1, \\otimes_2, \\otimes_3$ 分别为按位与、按位或、按位异或运算。记 $a_i$ 表示 $a$ 的从低位到高位的第 $i$ 个二进制位。定义一个作用在 $w$ 位二进制数上的新运算 $\\oplus$，满足对于结果 $a\\oplus b$ 的每一位 $(a\\oplus b)_i$ 有 $(a\\oplus b)_i = a_i \\otimes_{\\large o_i} b_i$。不难验证 $\\oplus$ 运算满足结合律和交换律。\r\n\r\n给出一张 $n$ 个点 $m$ 条边的无向图，每一条边的权值是一个 $w$ 位二进制数（即小于 $2^w$ 的非负整数）。请你找一棵原图的生成树。设你找出的生成树中的边边权分别为 $v_1,\\cdots,v_{n-1}$，请你最大化 $v_1\\oplus v_2\\oplus\\cdots\\oplus v_{n-1}$。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个正整数 $n,m$；\r\n\r\n第二行一个长度为 $w$ 的串，串中的每个字符为 `&`、`|`、`^`  中的一个（分别代表与、或和异或），表示每一个 $\\otimes_{\\large o_i}$。\r\n\r\n接下来 $m$ 行，每一行三个非负整数 $x,y,v$，表示一条连接 $x$ 和 $y$ 权值为 $v$ 的边，保证 $1\\leq x,y\\leq n$，$0\\le v < 2^w$。\r\n\r\n对于所有数据，$1\\le n\\le 70,1\\le m\\le 5000,1\\le w \\le 12$。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出一行一个数，表示答案。如果图不连通，输出 `-1`。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"##### 样例输入 1\r\n\r\n```plain\r\n3 3\r\n^\r\n1 2 1\r\n2 3 1\r\n1 3 0\r\n```\r\n\r\n##### 样例输出 1\r\n\r\n```plain\r\n1\r\n```"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"来自 THUPC（THU Programming Contest，清华大学程序设计竞赛）2019。\r\n\r\n题解等资源可在 https://github.com/wangyurzee7/THUPC2019 查看。"}]}