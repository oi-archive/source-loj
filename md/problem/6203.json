{"title":"可持久化队列","time_limit":500,"memory_limit":512,"tags":["可持久化","数据结构"],"operation":{"submit":"https://loj.ac/problem/6203#submit_code","submissions":"https://loj.ac/submissions?problem_id=6203","statistics":"https://loj.ac/problem/6203/statistics/fastest","testdata":"https://loj.ac/problem/6203/testdata","discussion":"https://loj.ac/discussion/problem/6203"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"<center><img src=\"https://cdn.awwni.me/rnnf.png\" width=\"237\" height=\"300\"></center>\r\n\r\n- - -\r\n\r\n这是一道假的模板题\r\n\r\n\r\n我们有一个数组 $A$，初始时只有 $A[0]$ 是空序列。对于第 $i$ 个操作：\r\n\r\n- `1 ver t` 表示将 $A[ver]$ **复制**到 $A[i]$，并在 $A[ver]$ 结尾插入元素 $t$\r\n- `2 ver` 表示将 $A[ver]$ **复制**到 $A[i]$，并删除 $A[ver]$ 开头的元素。\r\n\r\n此外，你需要维护一个变量 $hash$，其初始值为 $0$，每次执行完第二类操作时，将 $hash$ 变为 $(31 \\times hash + x)  \\bmod 2^{32}$，其中 $x$ 是被删除的元素。\r\n\r\n$hash$ 是你的最终输出的答案。\r\n\r\n此外，输入数据有可能加密，取决于输入参数 $ty$ 的值。如果 $ty = 0$，那么数据没有加密；否则，$ty=1$，那么读入 $ver$ 和 $t$ 的值，其真实值应与当前的 $hash$ 取按位异或，也就是说真实值应为 $ver \\oplus hash$ 和（对于第一类操作） $t \\oplus hash$。\r\n"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行有两个整数，$T$ 和 $ty$，表示有多少个操作，和数据是否加密。\r\n\r\n之后的 $T$ 行，每一行表示一个如上所述的操作。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"只有一行，表示执行完所有操作之后，$hash$ 的值。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入一\r\n\r\n```plain\r\n9 0\r\n1 0 1\r\n1 1 2\r\n2 1\r\n2 2\r\n2 2\r\n2 4\r\n1 4 5\r\n2 7\r\n2 8\r\n```\r\n\r\n#### 样例输出一\r\n\r\n```plain\r\n29584452\r\n```\r\n\r\n#### 样例解释一\r\n\r\n| $i$  | $A[i]$ | 第 $i$ 次操作删除的数（若有） |\r\n|------|---------|------|\r\n| $0$  | $[]   $ |      |\r\n| $1$  | $[1]  $ |      |\r\n| $2$  | $[1,2]$ |      |\r\n| $3$  | $[]   $ | $1$    |\r\n| $4$  | $[2]  $ | $1$    |\r\n| $5$  | $[2]  $ | $1$    |\r\n| $6$  | $[]   $ | $2$    |\r\n| $7$  | $[2,5]$ |      |\r\n| $8$  | $[5]  $ | $2$    |\r\n| $9$  | $[]   $ | $5$    |\r\n\r\n#### 样例输入二\r\n\r\n```plain\r\n9 1\r\n1 0 1\r\n1 1 2\r\n2 1\r\n2 3\r\n2 34\r\n2 997\r\n1 30789 30788\r\n2 30790\r\n2 954345\r\n```\r\n\r\n#### 样例输入二\r\n\r\n```plain\r\n29584452\r\n```\r\n\r\n#### 样例解释二\r\n\r\n解密后，与样例一相同"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"| 测试点编号       | T       | ty   |\r\n| ----------- | ------- | ---- |\r\n| 1           | $10^3$    | 1    |\r\n| 2, 3, 4     | $10^5$  | 1    |\r\n| 5, 6        | $10^6$ | 0    |\r\n| 7, 8, 9, 10 | $10^6$ | 1    |\r\n\r\n对于所有操作，保证操作合法，即格式正确，不会在空的版本上进行操作 $2$，$ver \\geq 0$ 且 $ver$ 小于当前操作编号。\r\n\r\n对于第一类操作，$0 \\leq t \\lt 10000000 $\r\n\r\n- - -\r\n\r\n请使用无符号整数进行输入输出！变量应使用 `unsigned` 类型，`printf` 和 `scanf` 应使用  `%u` 格式。\r\n\r\n如果你使用冲击满分的算法，但是使用 `scanf`，你的程序很可能将花费超过 $80\\%$ 的运行时间在输入数据。所以请务必使用读入优化！可以参考附加文件中 bqsg 提供的 read.cpp 实现的 A + B Problem 的程序。"}]}