{"title":"「2019 集训队互测 Day 4」基础圆方树练习题","time_limit":10000,"memory_limit":512,"tags":["集训队互测","2019","仙人掌","数据结构","图论"],"operation":{"submit":"https://loj.ac/problem/3078#submit_code","submissions":"https://loj.ac/submissions?problem_id=3078","statistics":"https://loj.ac/problem/3078/statistics/fastest","testdata":"https://loj.ac/problem/3078/testdata","discussion":"https://loj.ac/discussion/problem/3078"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"有一天，AwD 到森林里游玩，回来之后跟 zhangzy 说，我发现好多棵会动的树耶！zhangzy 说，这有什么好稀奇的，我用手指头就能维护每棵树的形态。\r\n\r\n于是又过了几天 AwD 到沙漠里游玩，回来之后跟 zhangzy 说，我发现好多棵会动的仙人掌耶！zhangzy 说，这有什么好稀奇的，我用脚丫子就能维护每棵仙人掌的形态。\r\n\r\n而后又再过了几天AwD到篮球场上游玩，回来之后跟zhangzy说，我发现好多棵会动的 k-FC 耶！zhangzy 说，这有什么好稀奇的，我什么都不做就能维护每棵 k-FC 的形态了。\r\n\r\n于是 AwD 很郁闷，他向你求助，请帮帮他吧。\r\n\r\n如果一个无向连通图的任意一条边最多属于 $k$ 个简单环，我们就称之为 k-FC。\r\n\r\n如果一个无向图的每个连通块都是个 k-FC，且不存在自环，我们就称之为篮球场。\r\n\r\n为了证明你确实能够维护 k-FC，我们给你 $n$ 个结点，从 $1$ 到 $n$ 标号。\r\n\r\n初始时没有任何边，且每个结点 $i$ 有个非负权值 $w_i$。每次进行如下操作之一：\r\n\r\n- `link v u w`：在结点 $v,u$ 间连一条权值为 $w$ 的边。\r\n  - $1 \\leq v, u\\leq n$ 且 $w$ 为正整数，保证操作后图依然是个篮球场。\r\n  - 在进行该操作后输出 `ok`。\r\n- `cut v u w`：在结点 $v,u$ 间删去一条权值为 $w$ 的边。\r\n  - $1 \\leq v, u \\leq n$ 且 $w$ 为正整数，保证操作后图依然是个篮球场。\r\n  - 在进行该操作后输出 `ok`（如果有多条权值为 $w$ 的边删去任意一条）。\r\n- `query1 v u`：查询结点 $v$ 到结点 $u$ 的最短路信息。\r\n  - $1 \\leq v, u \\leq n$。\r\n  - 输出两个用空格隔开的整数 $\\min, \\sigma$，分别代表最短路上点权的最小值、和。\r\n  - 如果没有路到达则 $\\min=-1, \\sigma=-1$。\r\n  - 如果最短路不唯一 $\\min=-2, \\sigma=-2$。\r\n- `query2 v u`：查询以结点 $v$ 为根，子k-FC $u$ 的信息。\r\n  - $1 \\leq v, u \\leq n$。\r\n  - 以结点 $v$ 为根，子k-FC $u$ 的定义是，删掉 $v$ 到 $u$ 之间的所有简单路径上的边之后，$u$ 所在的连通块。\r\n  - 输出两个用空格隔开的整数 $\\min,\\sigma$，分别代表子 k-FC $u$ 中点权的最小值、和。\r\n  - 如果 $v,u$ 不连通则 $\\min=-1, \\sigma=-1$。\r\n- `add1 v u d`：把结点 $v$ 到结点 $u$ 的最短路上的每一个结点的权值都加上 $d$。\r\n  - $1 \\leq v, u \\leq n$ 且 $d$ 为正整数。\r\n  - 如果有路可达且最短路唯一，则输出 `ok`；\r\n  - 否则操作非法，不进行操作并输出 `failed`。\r\n- `add2 v u d`：把以结点 $v$ 为根，子k-FC $u$ 的每一个结点的权值都加上 $d$。\r\n  - $1 \\leq v, u \\leq n$ 且 $d$ 为正整数。\r\n  - 如果 $v,u$ 在同一个连通块里，则输出 `ok`；\r\n  - 否则操作非法，不进行操作并输出 `failed`。\r\n\r\n\r\n\r\n~~提示：众所周知，k-FC 是 k-Factors Cactus 的简称。~~\r\n\r\n"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行一个整数 $T$ 表示测试集编号。\r\n\r\n第二行三个用空格隔开的正整数 $n,m,k$ 表示一共有 $n$ 个结点，$m$ 个操作，每条边最多属于 $k$ 个简单环。\r\n\r\n接下来一行 $n$ 个正整数，第 $i$ 个正整数为 $w_i$。\r\n\r\n接下来 $m$ 行，每行代表一个操作。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"对于每个操作，输出相应的结果。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入 1\r\n```\r\n0\r\n11 23 4\r\n10 5 11 7 8 14 30 3 16 20 19\r\nlink 1 2 5\r\nlink 2 3 3\r\nlink 3 4 7\r\nlink 4 5 8\r\nlink 2 6 10\r\nlink 6 7 15\r\nlink 4 7 3\r\nlink 6 8 9\r\nlink 6 8 6\r\nlink 7 9 12\r\nlink 9 11 10\r\nlink 7 10 4\r\nlink 9 10 8\r\nquery1 6 11\r\nquery1 2 10\r\nquery2 8 7\r\nadd1 8 5 100\r\nquery1 1 7\r\nquery2 8 7\r\nadd2 11 7 1000\r\nquery1 8 3\r\nadd2 3 2 2333\r\nquery1 1 5\r\n```\r\n\r\n#### 样例输出 1\r\n\r\n````\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\nok\r\n-2 -2\r\n5 73\r\n16 85\r\nok\r\n5 263\r\n16 185\r\nok\r\n1005 4233\r\nok\r\n1011 9907\r\n````"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"一共 $18$ 个测试集：\r\n\r\n| 分数 | 测试集编号 | $k$ 的范围 | 特殊性质 |\r\n| :-: | :-: | :---: | :-: |\r\n|  6  |  1  | $k=0$ |  AB |\r\n|  6  |  2  | $k=0$ |  AC |\r\n|  6  |  3  | $k=0$ |  A  |\r\n|  5  |  4  | $k=0$ |  B  |\r\n|  5  |  5  | $k=0$ |  C  |\r\n|  5  |  6  | $k=0$ |     |\r\n|  6  |  7  | $k=1$ |  AB |\r\n|  6  |  8  | $k=1$ |  AC |\r\n|  6  |  9  | $k=1$ |  A  |\r\n|  5  |  10 | $k=1$ |  B  |\r\n|  5  |  11 | $k=1$ |  C  |\r\n|  5  |  12 | $k=1$ |     |\r\n|  6  |  13 | $k=8$ |  AB |\r\n|  6  |  14 | $k=8$ |  AC |\r\n|  7  |  15 | $k=8$ |  A  |\r\n|  5  |  16 | $k=8$ |  B  |\r\n|  5  |  17 | $k=8$ |  C  |\r\n|  5  |  18 | $k=8$ |     |\r\n\r\n特殊性质 A：`link` 与 `cut` 在其他操作之前。\r\n\r\n特殊性质 B：没有操作 `query2`、操作 `add1` 与操作 `add2`。\r\n\r\n特殊性质 C：没有操作 `query2` 与操作 `add2`。\r\n\r\n$1\\leq n\\leq 50000$；$1\\leq m \\leq 250000$。\r\n\r\n保证 `link` 和 `cut` 操作中的 $w$ 满足 $1\\leq w\\leq 10000$，所以关于边权的计算不会超出 $32$ 位有符号整数范围。\r\n\r\n保证初始的 $w_i$ 不超过 $10^9$，保证所有 `add1` 和 `add2` 操作中的 $d$ 之和不超过 $10^9$。\r\n\r\n"}]}