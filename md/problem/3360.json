{"title":"「PA 2019」Sonda","time_limit":2000,"memory_limit":256,"tags":["2019","PA","交互题"],"operation":{"submit":"https://loj.ac/problem/3360#submit_code","submissions":"https://loj.ac/submissions?problem_id=3360","statistics":"https://loj.ac/problem/3360/statistics/fastest","testdata":"https://loj.ac/problem/3360/testdata","discussion":"https://loj.ac/discussion/problem/3360"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"**题目译自 [PA 2019](https://sio2.mimuw.edu.pl/c/pa-2019-1/dashboard/) Runda 5 [Sonda](https://sio2.mimuw.edu.pl/c/pa-2019-1/p/son/)**\r\n\r\n这是一道交互题。\r\n\r\n有一个 $n$ 个点的无向连通图。你有一个探测器，它最初在 $1$ 号节点。\r\n\r\n你每次可以向探测器发送指令，给出节点 $v$，如果当前节点和 $v$ 之间有一条边，那么探测器就会移动到该节点，每次发出这一指令就会得到反馈信息。若探测器进行了移动并且这是探测器第偶数次移动，那么返回「成功」，否则返回「失败」。你最多可以发送 $10^6$ 次该指令。\r\n\r\n你还另外需要进行 $n$ 次标记操作，需要保证恰好在机器人位于每个节点的时候进行一次标记操作。\r\n\r\n#### 交互方式\r\n\r\n您的程序需要引用交互库：\r\n\r\n```cpp\r\n#include \"sonlib.h\"\r\n```\r\n\r\n这个交互库提供以下函数：\r\n\r\n```cpp\r\nint GetN()\r\n```\r\n\r\n- 返回一个正整数 $n(3\\le n\\le 400)$，表示这个图的节点数。\r\n\r\n```cpp\r\nint GetSubtask()\r\n```\r\n\r\n- 返回一个整数 $s(0\\le s\\le 3)$，表示子任务类型。\r\n  - 若 $s=0$，则表示该图没有任何附加性质；\r\n  - 若 $s=1$，表示图为完整的二分图，即可以将点集划分为两非空集合 $A,B$，每个点都属于 $A$ 或 $B$ 中的一个，并且有 $|A|\\cdot |B|$ 条边；\r\n  - 若 $s=2$，保证图中 $1$ 与 $2$，$2$ 与 $3$，$3$ 与 $1$ 之间一定有边；\r\n  - 若 $s=3$，保证图中所有点恰好与两个点相连。\r\n\r\n```cpp\r\nint MoveProbe(int v)\r\n```\r\n\r\n- 向探测器发出「走向节点 $v$」的指令，如果探测器当前就在节点 $v$，你的程序会被直接判为错误。若探测器进行了移动并且这是探测器第偶数次移动，那么返回 `1`，否则返回 `0`，若探测器没有进行移动，也返回 `0`。\r\n\r\n```cpp\r\nvoid Examine()\r\n```\r\n\r\n- 让探测器标记当前节点。如果该节点已经被标记，你的程序会被直接判为错误。当完成了所有节点的标记操作后，程序会被判定为正确并自动退出。\r\n\r\n你需要实现主函数\r\n\r\n```cpp\r\nint main()\r\n```\r\n\r\n"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n4 4 0\r\n1 2\r\n2 3\r\n3 1\r\n2 4\r\n```\r\n\r\n#### 样例交互过程\r\n\r\n|        函数调用         | 返回值 | 当前探测器位置 | 成功移动次数 |                         注释                          |\r\n| :---------------------: | :----: | :------------: | :----------: | :---------------------------------------------------: |\r\n|    $\\texttt{GetN()}$    |  $4$   |      $1$       |     $0$      |                    图中有 $4$ 个点                    |\r\n| $\\texttt{GetSubtask()}$ |  $0$   |      $1$<!-- 1 -->       |     $0$<!-- 1 -->      |                      参数 $s=0$                       |\r\n|  $\\texttt{Examine()}$   |   -    |      $1$<!-- 2 -->       |     $0$<!-- 2 -->      |                     标记 $1$ 号点                     |\r\n| $\\texttt{MoveProbe(4)}$ |  $0$   |      $1$<!-- 1 -->       |     $0$<!-- 1 -->      |                 $1$ 与 $4$ 之间没有边                 |\r\n| $\\texttt{MoveProbe(2)}$ |  $0$<!-- 1 -->   |      $2$       |     $1$      | 探测器从 $1$ 移动到 $2$，此时探测器移动成功次数为奇数 |\r\n| $\\texttt{MoveProbe(3)}$ |  $1$   |      $3$       |     $2$      |             此时探测器移动成功次数为偶数              |\r\n|  $\\texttt{Examine()}$   |   -    |      $3$<!-- 1 -->       |     $2$<!-- 1 -->      |                     标记 $3$ 号点                     |\r\n| $\\texttt{MoveProbe(2)}$ |  $0$   |      $2$       |     $3$      |                                                       |\r\n|  $\\texttt{Examine()}$   |   -    |      $2$<!-- 1 -->       |     $3$<!-- 1 -->      |                     标记 $2$ 号点                     |\r\n| $\\texttt{MoveProbe(4)}$ |  $1$   |      $4$       |     $4$<!-- 1 -->      |                                                       |\r\n|  $\\texttt{Examine()}$   |   -    |       -<!-- 1 -->       |      -       | 探测器已将每个点都探测一次，因此程序结束，该用例通过  |\r\n\r\n"}]}