{"title":"「BJOI2018」二进制","time_limit":1000,"memory_limit":512,"tags":["BJOI","2018","线段树","set","树状数组","二进制"],"operation":{"submit":"https://loj.ac/problem/2492#submit_code","submissions":"https://loj.ac/submissions?problem_id=2492","statistics":"https://loj.ac/problem/2492/statistics/fastest","testdata":"https://loj.ac/problem/2492/testdata","discussion":"https://loj.ac/discussion/problem/2492"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"pupil 发现对于一个十进制数，无论怎么将其的数字重新排列，均不影响其是不是 $3$ 的倍数。他想研究对于二进制，是否也有类似的性质。\r\n于是他生成了一个长为 $n$ 的二进制串，希望你对于这个二进制串的一个子区间，能求出其有多少位置不同的连续子串，满足在重新排列后（可包含前导 $0$）是一个 $3$ 的倍数。两个位置不同的子区间指开始位置不同或结束位置不同。\r\n由于他想尝试尽量多的情况，他有时会修改串中的一个位置，并且会进行多次询问。\r\n"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"输入第一行包含一个正整数 $n$，表示二进制数的长度。\r\n\r\n之后一行 $n$ 个空格隔开的整数，保证均是 $0$ 或 $1$，表示该二进制串。\r\n\r\n之后一行一个整数 $m$，表示询问和修改的总次数。\r\n\r\n之后 $m$ 行每行为 $1\\ i$，表示 pupil 修改了串的第 $i$ 个位置（$0$ 变成 $1$ 或 $1$ 变成 $0$ ），或 $2\\ l\\ r$，表示 pupil 询问的子区间是 $[l,r]$。\r\n\r\n串的下标从 $1$ 开始。\r\n"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"对于每次询问，输出一行一个整数表示对应该询问的结果。\r\n"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n4\r\n1 0 1 0\r\n3\r\n2 1 3\r\n1 3\r\n2 3 4\r\n```\r\n\r\n#### 样例输出\r\n```plain\r\n2\r\n3\r\n```\r\n\r\n#### 样例解释\r\n对于第一个询问，区间 $[2,2]$ 只有数字 $0$，是 $3$ 的倍数，区间 $[1,3]$ 可以重排成 $011_{(2)}=3_{(10)}$，是 $3$ 的倍数，其他区间均不能重排成 $3$ 的倍数。\r\n\r\n对于第二个询问，全部三个区间均能重排成 $3$ 的倍数（注意 $00$ 也是合法的）。\r\n"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"对于 $20\\%$ 的数据，$1 \\leq n,m \\leq 100$；\r\n\r\n对于 $50\\%$ 的数据，$1 \\leq n,m \\leq 5000$；\r\n\r\n对于 $100\\%$ 的数据，$1 \\leq n,m \\leq 100000$，$l \\leq r$。\r\n"}]}