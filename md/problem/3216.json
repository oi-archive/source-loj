{"title":"「PA 2019」Wina","time_limit":1000,"memory_limit":256,"tags":["2019","PA","贪心"],"operation":{"submit":"https://loj.ac/problem/3216#submit_code","submissions":"https://loj.ac/submissions?problem_id=3216","statistics":"https://loj.ac/problem/3216/statistics/fastest","testdata":"https://loj.ac/problem/3216/testdata","discussion":"https://loj.ac/discussion/problem/3216"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"**题目译自 [PA 2019](https://sio2.mimuw.edu.pl/c/pa-2019-1/dashboard/) Runda 1 [Wina](https://sio2.mimuw.edu.pl/c/pa-2019-1/p/win/)**\r\n\r\n有 $ n $ 行总共 $ \\frac{n(n + 1)}{2} $ 个数叠成了一个数塔，从上往下数第 $ i $ 行里面恰好有 $ i $ 个数。\r\n\r\n给定 $ k $，你需要从中拿走恰好 $ k $ 个数，使得拿走的数的最小值最小。一个数能被拿走当且仅当它左上角和右上角都没有数或者那个数已经被拿走了。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个正整数 $ n $ 和 $ k $。\r\n\r\n接下来 $ n $ 行，第 $ i $ 行有 $ i $ 个正整数 $ a_{i, 1}, a_{i, 2} \\ldots, a_{i, i} $，其中 $ a_{i, j} $ 表示从上往下第 $ i $ 行从左往右第 $ j $ 个数。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出一行一个整数，即拿走的数的最小值的最小值。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n5 7\r\n1999\r\n2019 2010\r\n850 1500 1600\r\n900 900 710 900\r\n1000 800 600 800 1000\r\n```\r\n#### 样例输出\r\n```plain\r\n710\r\n```\r\n#### 样例说明\r\n左边为数塔，右边为最优拿数顺序。\r\n\r\n![win.png](https://loj-img.upyun.menci.memset0.cn/2019/12/19/5dfb078ec81a0.png)"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"$1 \\le n \\le 2\\times 10^3, 1 \\le k \\le \\frac{n(n + 1)}{2}, 1 \\le a_{i, j} \\le 2019$"}]}