{"title":"「2017 山东三轮集训 Day1」Fable","time_limit":2000,"memory_limit":233,"tags":[],"operation":{"submit":"https://loj.ac/problem/6130#submit_code","submissions":"https://loj.ac/submissions?problem_id=6130","statistics":"https://loj.ac/problem/6130/statistics/fastest","testdata":"https://loj.ac/problem/6130/testdata","discussion":"https://loj.ac/discussion/problem/6130"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"有这么一则传闻，$ O(n \\log n) $ 的排序发明之前，滋滋国的排序都是采用的冒泡排序。即使是冒泡排序，对当时的国民来说也太复杂太难以理解，于是滋滋国出现了这样一个职业 —— 排序使，收取报酬并负责给序列排序。\r\n\r\n作为冒泡协会首席排序使，Lyra 收费颇高，为了照顾并不富裕的人，Lyra 允许顾客只支付一部分酬劳并获得并不完美的冒泡排序服务。众所周知，$ n $ 个元素的冒泡排序需要 $ n - 1 $ 轮才能完成，有一位顾客支付的费用，只能够完成前 $ k $ 轮的排序。\r\n\r\n作为冒泡排序的首席排序使，天赋卓绝的 Lyra 暗地里早就掌握了 $ O(n \\log n) $ 的排序方法，这也是她轻松当选首席排序使的原因 —— 排序速度无人能敌。而现在面对只能够完成前 $ k $ 轮冒泡排序的要求，Lyra 犯了难，于是她来寻求你的帮助。\r\n\r\n给定一个序列，执行如下程序：\r\n\r\n$$\r\n\\begin{aligned}\r\n& \\textbf{for} \\ i \\ \\textbf{from} \\ 1 \\ \\textbf{to} \\ k \\\\\r\n& \\hskip{2 em} \\textbf{for} \\ j \\ \\textbf{from} \\ 1 \\ \\textbf{to} \\ n - 1 \\\\\r\n& \\hskip{4 em} \\textbf{if} \\ A_j > A_{j + 1} \\\\\r\n& \\hskip{6 em} \\textbf{swap}(A_j, A_{j + 1})\r\n\\end{aligned}\r\n$$\r\n\r\n并输出之后的 $ A $ 序列。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个整数 $ n, k $，表示序列的长度和轮数。  \r\n接下来 $ n $ 行每行一个整数表示 $ A_i $。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出 $ n $ 行每行一个整数表示冒泡排序 $ k $ 轮后的 $ A_i $。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入 1\r\n```plain\r\n3 1\r\n3\r\n2\r\n1\r\n```\r\n\r\n#### 样例输出 1\r\n```plain\r\n2\r\n1\r\n3\r\n```\r\n\r\n#### 样例输入 2\r\n见「附加文件」中的 `ex_fable2.in`。\r\n\r\n#### 样例输出 2\r\n见「附加文件」中的 `ex_fable2.out`。"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"对于全部数据，$ 1 \\leq k < n \\leq 200000; 1 \\leq A_i \\leq 10 ^ 9 $。\r\n\r\n**子任务 1**（3 分）$ n \\leq 2000 $；  \r\n**子任务 2**（29 分）$ n \\leq 100000 $，所有的 $ A_i $ 均为随机生成；  \r\n**子任务 3**（68 分）$ n \\leq 200000 $。"}]}