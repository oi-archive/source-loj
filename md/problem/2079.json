{"title":"「JSOI2016」轻重路径","time_limit":3000,"memory_limit":512,"tags":["2016","JSOI","Link-Cut Tree","DFS 序","线段树","离线"],"operation":{"submit":"https://loj.ac/problem/2079#submit_code","submissions":"https://loj.ac/submissions?problem_id=2079","statistics":"https://loj.ac/problem/2079/statistics/fastest","testdata":"https://loj.ac/problem/2079/testdata","discussion":"https://loj.ac/discussion/problem/2079"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"JYY 最近学习了一种处理树形结构的高级技巧，叫「轻重路径剖分」。这种技术会将树中的边划分成轻边和重边。相连的重边会形成一些树上相离的路径。「轻重路径剖分」可以使得从树上任意一点走到根，都至多只会经过 $\\mathcal{O} (\\log N)$ 条不同的重路径。\r\n\r\n如果你不了解轻重路径剖分，JYY 在这里简单介绍一下：对于一棵有根树中的任意一个点 $u$，我们用 $\\text{size}(u)$ 表示其为根的子树中的点的数量。对于 $u$ 的所有孩子中，我们选出 $\\text{size}$ 值最大的孩子 $v$，并将边 $(u,v)$ 设置成重边，$u$ 和其他孩子之间的边我们均设置为轻边。\r\n\r\n为了简化问题，这里 JYY 仅考虑一棵 $N$ 个点的有根二叉树。这 $N$ 个点由 $1$ 到 $N$ 编号。并且如果 $u$ 存在两个 $\\text{size}$ 值一样的孩子，则我们默认 $u$ 和其左孩子的连边为重边。\r\n\r\n现在 JYY 希望执行额外 $Q$ 次删点操作，每次 JYY 会随机删掉一个当前二叉树的叶子节点，而你则需要动态的维护这棵树的轻重路径剖分。\r\n\r\n为了方便输出，你只需要在每次操作后输出所有重边指向的点的权值和即可。\r\n\r\n如果删除一个点之后，存在一个点 $u$ 拥有两个 $\\text{size}$ 值一样的孩子，则我们保持 $u$ 在该操作执行之前的重边划分。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行包含一个整数 $N$；  \r\n接下来 $N$ 行，第 $i$ 行包含两个整数 $L_i,R_i$，表示编号为 $i$ 的点的左孩子编号和右孩子编号，$L_i=0$表示点 $i$ 没有左孩子，$R_i=0$ 表示点 $i$ 没有右孩子；  \r\n第 $N+2$ 行包含一个整数 $Q$，表示 JYY 进行的删点操作；  \r\n第 $N+3$ 行包含 $Q$ 个空格分开的正整数，表示 JYY 删去的叶子的编号。  \r\n输入数据保证每次删除操作均删除了一个叶子。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出 $Q+1$ 行，每行包含一个整数，表示在轻重路径剖分中所有重边指向的点的编号的和。其中第一行对应初始的路径剖分，之后的 $Q$ 行对应进行了相应删点操作之后路径划分。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入\r\n```plain\r\n8\r\n2 3\r\n4 5\r\n0 0\r\n6 7\r\n0 8\r\n0 0\r\n0 0\r\n0 0\r\n7\r\n6 7 8 5 4 2 3\r\n```\r\n\r\n#### 样例输出\r\n```plain\r\n20\r\n21\r\n15\r\n7\r\n6\r\n2\r\n3\r\n0\r\n```"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"对于 $30\\%$ 的数据，满足 $N\\le 1000$；  \r\n对于 $50\\%$ 的数据，满足 $N\\le 5\\times 10^4$；  \r\n对于全部数据，满足 $N\\le 2\\times 10^5$。"}]}