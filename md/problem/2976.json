{"title":"「COI 2010」ROBOTI","time_limit":5000,"memory_limit":32,"tags":["2010","COCI","交互题"],"operation":{"submit":"https://loj.ac/problem/2976#submit_code","submissions":"https://loj.ac/submissions?problem_id=2976","statistics":"https://loj.ac/problem/2976/statistics/fastest","testdata":"https://loj.ac/problem/2976/testdata","discussion":"https://loj.ac/discussion/problem/2976"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"**译自 [COI 2010](http://hsin.hr/coci/archive/2009_2010/) T4.** ***[ROBOTI](http://hsin.hr/coci/archive/2009_2010/olympiad_tasks.pdf)***\r\n\r\n**这是一道交互题**。\r\n\r\n两个机器人被困在一个仓库中，两个机器人被编号为 $1$ 和 $2$。这个仓库是一个 $R$ 行 $C$ 列的网格，每个单元格要么是空的，要么是被占用的。机器人用无线电命令控制。每个命令包含两部分数据：\r\n- *robot*：值为 $1$ 或 $2$，表示我们要移动的机器人编号；\r\n- *direction*：值为字母 `U`，`D`，`L` 或 `R`，表示我们希望机器人向哪个方向移动（上下左右，每次移动一格）。\r\n\r\n如果目的单元格被占用，被另一个机器人占用或者在仓库外面，机器人会停留在原地，什么事都不会发生，否则机器人就会移向目的单元格。\r\n\r\n机器人装配有 GPS 系统，然而由于部署时出现了故障，我们不能知道机器人的确切位置，只能知道两个机器人之间的**曼哈顿距离**。如果两个机器人分别位于 $(r_1,c_1)$ 和 $(r_2,c_2)$，那么它们之间的曼哈顿距离为 $|r_1-r_2|+|c_1-c_2|$。\r\n\r\n在每次操作后，无论成功与否，我们唯一能知道的信息只是两个机器人之间的曼哈顿距离。\r\n\r\n机器人目前位于两个不同且没有被占用的单元格中。写一个程序将两个机器人分别移动到给定点处。保证仓库中所有未被占用的单元格都是连通的。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"在交互前你需要从标准输入获取以下信息：\r\n\r\n第一行两个整数 $r,c$，表示仓库的规模；\r\n\r\n接下来 $r$ 行，每行 $c$ 个字符，描述这个仓库。字符只包含 `.`，`#` 和 `x`。`.` 表示未被占用的单元格，`#` 表示被占用的单元格，`x` 表示机器人的目的地。保证有且仅有两个 `x` 字符。\r\n\r\n最后会给出初始状态下两机器人之间的曼哈顿距离。\r\n\r\n你需要通过标准输入输出与交互器进行交互。对于每一条命令，输出一个整数和一个字符并用一个空格隔开，分别表示要控制的机器人和机器人移动的方向，值域同题目描述。输出命令结束后，你需要刷新标准输出，利用 `fflush(stdout)` 命令或对应命令。\r\n\r\n如果命令结束，则输出一个 `0` 后退出程序。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"利用附加文件中的 `grader.cpp` 测试时，输入如下：\r\n\r\n第一行两个整数 $r,c$，表示仓库的规模；\r\n\r\n接下来 $r$ 行，每行 $c$ 个字符，表示目前状态。字符包括 `.`，`#`，`1`，`2` 和 `x`。其中除数字之外的字符意义同输入，数字表示对应机器人的初始位置。\r\n\r\n在测评时，交互器将把数字转化为 `.`。\r\n\r\n#### 样例输入\r\n```plain\r\n4 5\r\n##x1.\r\n.##..\r\n.....\r\n2...x\r\n```\r\n"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"对于 $40$ 分的数据，不包含被占用的单元格；\r\n\r\n对于 $80$ 分的数据，$R,C\\le 50$；\r\n\r\n对于全部数据，$2\\le R,C\\le 200$。\r\n\r\n---\r\n\r\n#### 交互器使用方法\r\n\r\n测试程序时，需将输入保存在一个文件中，利用如下命令编译交互器：\r\n\r\n```bash\r\ng++ grader.cpp -o grader -O2 -std=c++11\r\n```\r\n\r\n并利用如下命令运行（Linux）：\r\n```bash\r\n./grader <file_name>\r\n```\r\n\r\n或（Windows）：\r\n```bash\r\ngrader <file_name>\r\n```\r\n\r\n其中，`file_name` 指输入文件的名称。\r\n\r\n你可以运行两个终端来进行程序测试。"}]}