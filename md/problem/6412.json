{"title":"「ICPC World Finals 2018」骑士之旅","time_limit":2000,"memory_limit":1024,"tags":["2018","ICPC","World Final"],"operation":{"submit":"https://loj.ac/problem/6412#submit_code","submissions":"https://loj.ac/submissions?problem_id=6412","statistics":"https://loj.ac/problem/6412/statistics/fastest","testdata":"https://loj.ac/problem/6412/testdata","discussion":"https://loj.ac/discussion/problem/6412"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"一个经典的问题是用一个国际象棋的骑士走遍 $8 \\times 8$ 的棋盘，其中骑士只能通过沿一个方向跳动一个方块并沿对角线方向跳动一个方块来移动。骑士必须不重复地走完棋盘的每个方块并回到起始点。因为方案很多，且棋盘的大小固定，所以对人类来说这是可以解决的。\r\n\r\n但你有一台电脑，还懂得编程！所以你需要解决一个更难的问题：棋盘大小为 $m \\times n$ 且骑士的路径不能自交。如果把骑士路径上的格子中心点相连的话，这些点必须形成一个简单多边形；也就是说除了相邻的线段在顶点上接触以外，没有任何两个线段相交或接触。这个限制条件啊导致不重复地经过每个格子变得不可能，所以你只要最大化骑士经过的格子数量。我们仍然要求骑士必须回到出发点。下图显示了第一个样例输入（$6 \\times 6$ 棋盘）对应的最优解。\r\n\r\n![chess.png](https://i.loli.net/2018/05/22/5b035d1cab033.png)"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"输入共一行两个数 $m\\ (1 \\le m \\le 8)$ 和 $n\\ (1 \\le n \\le 10^{15})$，表示矩形棋盘的大小。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"输出骑士在路径不自交的情况下能在棋盘上走过的最多方格数。如果没有这样的路径，输出 $0$。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入 1\r\n```plain\r\n6 6\r\n```\r\n\r\n#### 样例输出 1\r\n```plain\r\n12\r\n```\r\n\r\n#### 样例输入 2\r\n```plain\r\n8 3\r\n```\r\n\r\n#### 样例输出 2\r\n```plain\r\n6\r\n```\r\n\r\n#### 样例输入 3\r\n```plain\r\n7 20\r\n```\r\n\r\n#### 样例输出 3\r\n```plain\r\n80\r\n```\r\n\r\n#### 样例输入 4\r\n```plain\r\n2 6\r\n```\r\n\r\n#### 样例输出 4\r\n```plain\r\n0\r\n```\r\n\r\n"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"在不侵犯原题版权的情况下，本题面中文翻译基于[知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议](http://creativecommons.org/licenses/by-nc-sa/4.0/)发布，注明出处时需指向本题链接。"}]}