{"title":"「2017 山东三轮集训 Day2」Emerald","time_limit":6000,"memory_limit":233,"tags":[],"operation":{"submit":"https://loj.ac/problem/6134#submit_code","submissions":"https://loj.ac/submissions?problem_id=6134","statistics":"https://loj.ac/problem/6134/statistics/fastest","testdata":"https://loj.ac/problem/6134/testdata","discussion":"https://loj.ac/discussion/problem/6134"},"statement":[{"title":"题目描述","type":"description","format":"markdown","require":["katex"],"content":"翡翠国有 $ n $ 座城，$ n $ 座城编号 $ 1 \\sim n $，按照编号顺序排成了一条线，中间由 $ n - 1 $ 条边顺次相连，即对于 $ 1 < i < n - 1 $，城市 $ i $ 和城市 $ i + 1 $ 之间有一条单向线路，初始时是从 $ i $ 指向 $ i + 1 $。\r\n\r\n每个城市都有一个等级，用 $ A $ 或 $ B $ 表示，每个城市都有一个人口，用 $ P_i $ 表示。$ A $等级城市的人有个毛病，总是认为自己的城市比 $ B $ 等级城市优越，所以，如果一个 $ A $ 等级城市的人能通过单向道路到达一个拥有更多人口的 $ B $ 等级城市，这个 $ A $ 等级城市的人就会不高兴。\r\n\r\nLyra 最近接受了一项关于这 $ n $ 个城市的规划项目，同时她对于城市人民的不高兴情况非常感兴趣，于是 Lyra 希望你在她做出每一步操作之后都告诉她有多少个城市的人民不高兴。\r\n\r\n操作分为两种：\r\n\r\n* `UPDATE x y` 把城市 $ x $ 的人口修改为 $ y $；  \r\n* `REVERSE l r` 把城市 $ l $ 到城市 $ r $ 之间的所有道路都反向 $ 1 < l < r < n $，即原来从 $ i $ 指向 $ i + 1 $，现在就修改为 $ i + 1 $ 指向 $ i $，反之亦然。"},{"title":"输入格式","type":"input_format","format":"markdown","require":["katex"],"content":"第一行两个整数 $ n, q $，表示城市数目和操作数目。  \r\n接下来 $ n $ 行，每行一个整数 $ P_i $ 一个字符 $ c $，表示城市的初始人口和等级。   \r\n接下来 $ q $ 行，每行一种操作 `UPDATE x y` 或 `REVERSE l r` 意义如题所述。"},{"title":"输出格式","type":"output_format","format":"markdown","require":["katex"],"content":"对于每个操作，输出一行一个整数表示该操作结束后有多少个城市的人民不高兴。"},{"title":"样例","type":"example","format":"markdown","require":["katex"],"content":"#### 样例输入 1\r\n```plain\r\n7 4\r\n0 A\r\n13 B\r\n4 B\r\n11 B\r\n10 A\r\n12 B\r\n4 A\r\nREVERSE 2 5\r\nUPDATE 5 12\r\nREVERSE 5 7\r\nUPDATE 2 0\r\n```\r\n\r\n#### 样例输出 1\r\n```plain\r\n2\r\n2\r\n3\r\n1\r\n```\r\n\r\n#### 样例输入 2\r\n见「附加文件」中的 `ex_emerald2.in`。\r\n\r\n#### 样例输出 2\r\n见「附加文件」中的 `ex_emerald2.out`。"},{"title":"数据范围与提示","type":"limit_and_hint","format":"markdown","require":["katex"],"content":"对于全部数据，$ 1 \\leq n, q \\leq 10 ^ 5 ; 1 \\leq x \\leq n; 1 \\leq l \\leq r \\leq n; 0 \\leq Pi , y \\leq 75 $。\r\n\r\n**子任务 1**（10 分）$ n, q \\leq 10 ^ 3 $；  \r\n**子任务 2**（35 分）只有 `REVERSE` 操作；  \r\n**子任务 3**（35 分）只有 `UPDATE` 操作；  \r\n**子任务 4**（40 分）无特殊限制。"}]}